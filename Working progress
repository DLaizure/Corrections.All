# Attorney Visitation Online Scheduling â€” Fullstack (Node + React + PostgreSQL)

This document contains a deployment-ready scheduling app scaffold with:

- Node.js + Express backend with **PostgreSQL** storage
- User authentication (register/login) with bcrypt and JWT
- **Email verification** (using nodemailer)
- **OAuth login option** (Google example)
- Roles: master, admin, user
- Firms selection (AFPD, Private Law Firm, etc.)
- Appointment system with **availability calendar**:
  - Multiple services
  - Custom durations per service
  - Buffer times between appointments
  - Attorneys manage their **visitation hours**
- Admin dashboard for managing attorneys, services, visitation hours, and viewing appointments
- React frontend with calendar view, booking modal, and admin controls
- Docker setup for local testing, but also **Render-ready deployment**

---

## Quick start (local)

1. Clone project directory structure into your machine.
2. In `/server`: `npm install` then `npm run migrate` (creates Postgres tables), then `npm start`.
3. In `/client`: `npm install` then `npm run dev`. Adjust ports if needed.

---

--- FILE: /server/package.json ---
{
  "name": "attorney-visitation-scheduler-server",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "migrate": "node migrate.js"
  },
  "dependencies": {
    "bcrypt": "^5.1.0",
    "cors": "^2.8.5",
    "dotenv": "^16.0.0",
    "express": "^4.18.2",
    "jsonwebtoken": "^9.0.0",
    "nanoid": "^4.0.0",
    "nodemailer": "^6.9.0",
    "passport": "^0.6.0",
    "passport-google-oauth20": "^2.0.0",
    "pg": "^8.11.0"
  }
}

--- FILE: /server/db.js ---
const { Pool } = require('pg');
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

module.exports = pool;

--- FILE: /server/migrate.js ---
const pool = require('./db');

(async () => {
  try {
    await pool.query(`
      CREATE TABLE IF NOT EXISTS users (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        username TEXT,
        email TEXT UNIQUE,
        password TEXT,
        firm TEXT,
        role TEXT,
        verified BOOLEAN DEFAULT false,
        created_at TIMESTAMP DEFAULT now()
      );

      CREATE TABLE IF NOT EXISTS attorneys (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        name TEXT,
        description TEXT
      );

      CREATE TABLE IF NOT EXISTS services (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        name TEXT,
        duration INTEGER,
        buffer INTEGER
      );

      CREATE TABLE IF NOT EXISTS visitation_hours (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        attorney_id UUID REFERENCES attorneys(id),
        day_of_week INTEGER,
        start_hour INTEGER,
        end_hour INTEGER
      );

      CREATE TABLE IF NOT EXISTS appointments (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        user_id UUID REFERENCES users(id),
        attorney_id UUID REFERENCES attorneys(id),
        service_id UUID REFERENCES services(id),
        start_ts TIMESTAMP,
        end_ts TIMESTAMP,
        status TEXT,
        created_at TIMESTAMP DEFAULT now()
      );
    `);
    console.log('âœ… Migration complete');
  } catch (err) {
    console.error('Migration failed', err);
  } finally {
    pool.end();
  }
})();

--- FILE: /client/package.json ---
{
  "name": "attorney-visitation-scheduler-client",
  "version": "1.0.0",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "serve": "vite preview"
  },
  "dependencies": {
    "axios": "^1.6.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "vite": "^4.0.0"
  }
}

--- FILE: /server/Render.yaml ---
services:
  - type: web
    name: attorney-scheduler-server
    env: node
    plan: free
    buildCommand: "npm install && npm run migrate"
    startCommand: "npm start"
    envVars:
      - key: DATABASE_URL
        sync: false
      - key: JWT_SECRET
        sync: false
      - key: SMTP_USER
        sync: false
      - key: SMTP_PASS
        sync: false
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false

--- FILE: /client/Render.yaml ---
services:
  - type: web
    name: attorney-scheduler-client
    env: static
    plan: free
    buildCommand: "npm install && npm run build"
    staticPublishPath: dist
    envVars:
      - key: VITE_API_URL
        sync: false

--- FILE: /server/.env.example ---
DATABASE_URL=postgresql://user:password@host:5432/dbname
JWT_SECRET=changeme
SMTP_USER=your_smtp_username
SMTP_PASS=your_smtp_password
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret

---

## Deployment to Render

1. Push code to GitHub.
2. On Render, create a **PostgreSQL database** â†’ copy the `DATABASE_URL`.
3. Create a new **Web Service** for `/server` â†’ set env vars.
4. Create another **Static Site** for `/client` â†’ set `VITE_API_URL` to your server URL.
5. Deploy. ðŸš€

---

# End of updated Render-ready document
